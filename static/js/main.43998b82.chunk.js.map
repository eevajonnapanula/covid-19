{"version":3,"sources":["components/Footer.tsx","components/Charts/BarChart.tsx","components/Charts/LineChart.tsx","utils/dataUtils.ts","components/Charts/GroupChart.tsx","components/Charts/Charts.tsx","components/NumberBox.tsx","components/Numbers.tsx","graphql/queries.ts","components/Root.tsx","graphql/apolloSetup.ts","App.tsx","index.tsx"],"names":["StyledFooter","styled","footer","Footer","id","values","HSLink","href","GithubLink","BarChart","data","title","labelsX","map","item","x","labelsY","y","maxY","length","Math","max","formatMessage","useIntl","theme","VictoryTheme","grayscale","domainPadding","containerComponent","responsive","padding","bottom","style","axis","stroke","grid","tickFormat","t","dependentAxis","tickLabelComponent","fontSize","fill","tickValues","textAnchor","angle","maxDomain","labels","toString","parent","border","animate","duration","labelComponent","dy","VictoryZoomVoronoiContainer","createContainer","LineChart","allowPan","zoomDomain","zoomDimension","voronoiDimension","interpolation","top","pointerLength","flyoutStyle","color","width","height","size","getDates","start","eachDayOfInterval","Date","end","formatDatesToXAndY","firstDate","date","format","filter","isSameDay","parseISO","GroupChart","confirmed","labelsConfirmedY","useState","setDate","setConfirmed","deaths","setDeaths","recovered","setRecovered","maxConfirmedY","onActivated","points","confirmedPoint","find","childName","deathPoint","recoveredPoint","handleActivate","name","orientation","gutter","colorScale","Charts","infectionSources","setiInfectionSources","infectionsPerDay","setInfectionsPerDay","totalInfectionsPerDay","setTotalInfectionsPerDay","useEffect","formattedDistricts","arr","value","reduce","acc","curr","undefined","push","formattedInfectionsPerDay","formattedTotalInfectionsPerDay","index","formatTotalInfections","Wrapper","div","Number","NumberBox","number","label","Rows","Row","Numbers","all","today","GET_DATA","gql","Header","header","Main","main","ButtonGroup","GroupButton","button","props","active","NotificationBox","Root","changeLocale","locale","useQuery","handleLocaleChange","onClick","isToday","cache","InMemoryCache","restLink","RestLink","uri","client","ApolloClient","link","translations","en","fi","App","localeFromLocalStorage","localStorage","getItem","localeToSet","setLocale","messages","setItem","document","documentElement","lang","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.43998b82.chunk.js","sourcesContent":["import React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport styled from 'styled-components';\n\nconst StyledFooter = styled.footer`\n  font-size: 0.85rem;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  align-items: center;\n  @media only screen and (min-width: 768px) {\n    width: 50rem;\n    flex-direction: row;\n    justify-content: space-around;\n  }\n`;\n\nconst Footer = () => (\n  <StyledFooter>\n    <p>\n      <FormattedMessage\n        id=\"footer.data-source\"\n        values={{\n          HSLink: (\n            <a href=\"https://github.com/HS-Datadesk/koronavirus-avoindata\">\n              Helsingin Sanomat\n            </a>\n          ),\n        }}\n      />\n    </p>\n    <p>\n      <FormattedMessage\n        id=\"footer.made-by\"\n        values={{\n          GithubLink: (\n            <a href=\"https://github.com/eevajonnapanula/covid-19\">Github</a>\n          ),\n        }}\n      />\n    </p>\n  </StyledFooter>\n);\n\nexport default Footer;\n","import React, { FunctionComponent } from 'react';\nimport {\n  VictoryTheme,\n  VictoryChart,\n  VictoryBar,\n  VictoryAxis,\n  VictoryContainer,\n  VictoryPortal,\n  VictoryLabel,\n} from 'victory';\nimport { XAndY } from '../../interfaces';\nimport { useIntl } from 'react-intl';\n\ninterface BarChartProps {\n  data: XAndY[];\n  title: string;\n}\n\nconst BarChart: FunctionComponent<BarChartProps> = ({ data, title }) => {\n  const labelsX = data.map(item => item.x);\n  const labelsY = data.map(item => item.y);\n\n  const maxY = labelsY.length > 0 ? Math.max(...labelsY) : 0;\n  const { formatMessage } = useIntl();\n  return (\n    <>\n      <h2>{title}</h2>\n      {data.length > 0 && (\n        <>\n          <VictoryChart\n            theme={VictoryTheme.grayscale}\n            domainPadding={20}\n            containerComponent={<VictoryContainer responsive={true} />}\n            padding={{ bottom: 150 }}\n          >\n            <VictoryAxis\n              style={{\n                axis: { stroke: '#e4e3d3' },\n                grid: { stroke: 'rgba(188, 187, 174, 0.3)' },\n              }}\n              tickFormat={t => `${t} ${formatMessage({ id: 'labels.pcs' })}`}\n              dependentAxis={true}\n              tickLabelComponent={\n                <VictoryPortal>\n                  <VictoryLabel style={{ fontSize: '12px', fill: '#e4e3d3' }} />\n                </VictoryPortal>\n              }\n            />\n            <VictoryAxis\n              style={{ axis: { stroke: '#e4e3d3' } }}\n              tickValues={labelsX}\n              tickLabelComponent={\n                <VictoryPortal>\n                  <VictoryLabel\n                    style={{\n                      textAnchor: 'end',\n                      fontSize: '12px',\n                      fill: '#e4e3d3',\n                    }}\n                    angle={-75}\n                  />\n                </VictoryPortal>\n              }\n            />\n            <VictoryBar\n              maxDomain={{ y: maxY + 20 }}\n              data={data}\n              labels={labelsY.map(item => item.toString())}\n              style={{\n                parent: {\n                  border: '1px solid #ccc',\n                },\n                data: { fill: '#23c9ff' },\n                labels: {\n                  fontSize: 15,\n                  fill: '#e4e3d3',\n                  padding: 15,\n                },\n              }}\n              animate={{\n                duration: 2000,\n              }}\n              labelComponent={<VictoryLabel dy={0} />}\n            />\n          </VictoryChart>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default BarChart;\n","import React, { FunctionComponent } from 'react';\nimport {\n  createContainer,\n  VictoryTheme,\n  VictoryChart,\n  VictoryLine,\n  VictoryLabel,\n  VictoryAxis,\n  VictoryPortal,\n  VictoryTooltip,\n  VictoryScatter,\n} from 'victory';\nimport { XAndY } from '../../interfaces';\nimport { useIntl } from 'react-intl';\nimport { VictoryVoronoiContainerProps } from 'victory-voronoi-container';\nimport { VictoryZoomContainerProps } from 'victory-zoom-container';\n\ninterface LineChartProps {\n  data: XAndY[];\n  title: string;\n}\n\nconst VictoryZoomVoronoiContainer = createContainer<\n  VictoryZoomContainerProps,\n  VictoryVoronoiContainerProps\n>('zoom', 'voronoi');\n\nconst LineChart: FunctionComponent<LineChartProps> = ({ data, title }) => {\n  const labels = data.map(item => item.y);\n  const { formatMessage } = useIntl();\n  return (\n    <>\n      <h2>{title}</h2>\n      <VictoryChart\n        theme={VictoryTheme.grayscale}\n        domainPadding={20}\n        containerComponent={\n          <VictoryZoomVoronoiContainer\n            responsive={true}\n            allowPan={true}\n            zoomDomain={{ x: [data.length - 14, data.length] }}\n            zoomDimension=\"x\"\n            voronoiDimension=\"x\"\n          />\n        }\n        padding={{ bottom: 100 }}\n      >\n        <VictoryAxis\n          style={{\n            axis: { stroke: '#e4e3d3' },\n            grid: { stroke: 'rgba(188, 187, 174, 0.3)' },\n          }}\n          tickFormat={t => `${t} ${formatMessage({ id: 'labels.pcs' })}`}\n          dependentAxis={true}\n          tickLabelComponent={\n            <VictoryPortal>\n              <VictoryLabel style={{ fontSize: '12px', fill: '#e4e3d3' }} />\n            </VictoryPortal>\n          }\n        />\n        <VictoryAxis\n          style={{ axis: { stroke: '#e4e3d3' } }}\n          tickValues={labels}\n          tickLabelComponent={\n            <VictoryPortal>\n              <VictoryLabel\n                style={{ textAnchor: 'end', fontSize: '12px', fill: '#e4e3d3' }}\n                angle={-75}\n              />\n            </VictoryPortal>\n          }\n        />\n        <VictoryLine\n          interpolation=\"natural\"\n          data={data}\n          labels={labels}\n          style={{\n            parent: {\n              border: '1px solid #ccc',\n            },\n            data: { stroke: '#23c9ff' },\n            labels: {\n              fontSize: 15,\n              fill: '#e4e3d3',\n              padding: 15,\n            },\n          }}\n          animate={{\n            duration: 2000,\n          }}\n          padding={{ top: 20, bottom: 60 }}\n          labelComponent={\n            <VictoryTooltip\n              pointerLength={0}\n              flyoutStyle={{\n                fill: 'transparent',\n                stroke: 'transparent',\n                color: '#e4e3d3',\n              }}\n              width={5}\n              height={5}\n            />\n          }\n        />\n        <VictoryScatter\n          animate={{\n            duration: 2000,\n          }}\n          data={data}\n          size={2}\n          style={{ data: { fill: '#23c9ff' } }}\n        />\n      </VictoryChart>\n    </>\n  );\n};\n\nexport default LineChart;\n","import isSameDay from 'date-fns/isSameDay';\nimport parseISO from 'date-fns/parseISO';\nimport format from 'date-fns/format';\nimport isBefore from 'date-fns/isBefore';\nimport eachDayOfInterval from 'date-fns/eachDayOfInterval';\nimport { DataItem, XAndY } from '../interfaces';\n\nconst getDates = (start: string) => {\n  return eachDayOfInterval({\n    start: new Date(start),\n    end: new Date(),\n  });\n};\n\nexport const formatDataToXAndY = (arr: DataItem[], value: string) => {\n  return arr.reduce((acc: XAndY[], curr: DataItem) => {\n    const hasValue = acc.find(item => {\n      return item.x === curr[value];\n    });\n\n    if (hasValue !== undefined) {\n      return acc.map((item: XAndY) => {\n        if (item.x === curr[value]) {\n          return {\n            ...item,\n            y: item.y + 1,\n          };\n        }\n\n        return item;\n      });\n    } else {\n      acc.push({ x: curr[value], y: 1 });\n    }\n    return acc;\n  }, []);\n};\n\nexport const formatDatesToXAndY = (data: DataItem[], firstDate: string) => {\n  const dates = getDates(firstDate);\n  return dates.map(date => {\n    return {\n      x: format(date, 'dd.MM'),\n      y: data.filter(item => isSameDay(parseISO(item.date), date)).length,\n    };\n  });\n};\n\nexport const formatTotalInfections = (data: DataItem[]) => {\n  if (data[0]) {\n    const dates = getDates(data[0].date);\n\n    return dates.reduce((acc: XAndY[], curr: Date, index: number) => {\n      if (index === 0) {\n        acc.push({\n          x: format(curr, 'dd.MM'),\n          y: data.filter(item => isSameDay(parseISO(item.date), curr)).length,\n        });\n      } else {\n        acc.push({\n          x: format(curr, 'dd.MM'),\n          y:\n            acc[index - 1].y +\n            data.filter(item => isSameDay(parseISO(item.date), curr)).length,\n        });\n      }\n      return acc;\n    }, []);\n  }\n  return [];\n};\n\nexport const sortDataByDate = (data: XAndY[]) =>\n  data.sort((a, b) => {\n    if (isSameDay(parseISO(a.x as string), parseISO(b.x as string))) {\n      return 0;\n    } else if (isBefore(parseISO(a.x as string), parseISO(b.x as string))) {\n      return 1;\n    }\n    return -1;\n  });\n","import React, { FunctionComponent, useState } from 'react';\nimport {\n  VictoryTheme,\n  VictoryChart,\n  VictoryBar,\n  VictoryAxis,\n  VictoryPortal,\n  VictoryLabel,\n  VictoryStack,\n  VictoryLegend,\n  createContainer,\n} from 'victory';\nimport { DataInXAndY } from '../../interfaces';\nimport { useIntl } from 'react-intl';\nimport { VictoryZoomContainerProps } from 'victory-zoom-container';\nimport { VictoryVoronoiContainerProps } from 'victory-voronoi-container';\n\ninterface GroupChartProps {\n  data: DataInXAndY;\n  title: string;\n}\n\nconst VictoryZoomVoronoiContainer = createContainer<\n  VictoryZoomContainerProps,\n  VictoryVoronoiContainerProps\n>('zoom', 'voronoi');\n\nconst getmaxConfirmedY = (labels: number[]) =>\n  labels.length > 0 ? Math.max(...labels) : 0;\n\nconst GroupChart: FunctionComponent<GroupChartProps> = ({ data, title }) => {\n  const { formatMessage } = useIntl();\n  const labelsX = data.confirmed.map(item => item.x);\n  const labelsConfirmedY = data.confirmed.map(item => item.y);\n  const [date, setDate] = useState('');\n  const [confirmed, setConfirmed] = useState('');\n  const [deaths, setDeaths] = useState('');\n  const [recovered, setRecovered] = useState('');\n  const maxConfirmedY = getmaxConfirmedY(labelsConfirmedY);\n\n  const handleActivate = (points: any) => {\n    const confirmedPoint = points.find(\n      (item: any) => item.childName === 'bar-confirmed'\n    );\n    const deathPoint = points.find(\n      (item: any) => item.childName === 'bar-deaths'\n    );\n    const recoveredPoint = points.find(\n      (item: any) => item.childName === 'bar-recovered'\n    );\n\n    setConfirmed(confirmedPoint.y);\n    setDeaths(deathPoint.y);\n    setRecovered(recoveredPoint.y);\n    setDate(confirmedPoint.x);\n  };\n  return (\n    <>\n      <h2>{title}</h2>\n      {data.confirmed.length > 0 && (\n        <>\n          <VictoryChart\n            theme={VictoryTheme.grayscale}\n            domainPadding={20}\n            padding={{ bottom: 100 }}\n            containerComponent={\n              <VictoryZoomVoronoiContainer\n                responsive={true}\n                onActivated={points => handleActivate(points)}\n                allowPan={true}\n                zoomDomain={{\n                  x: [data.confirmed.length - 14, data.confirmed.length],\n                }}\n                zoomDimension=\"x\"\n                voronoiDimension=\"x\"\n              />\n            }\n          >\n            <VictoryLegend\n              name=\"legend\"\n              title={`${formatMessage({ id: 'labels.date' })} ${date}`}\n              orientation=\"vertical\"\n              height={50}\n              gutter={10}\n              data={[\n                {\n                  name: `${formatMessage({\n                    id: 'labels.confirmed',\n                  })} ${confirmed}`,\n                },\n                {\n                  name: `${formatMessage({\n                    id: 'labels.recovered',\n                  })} ${recovered}`,\n                },\n                {\n                  name: `${formatMessage({\n                    id: 'labels.deaths',\n                  })} ${deaths}`,\n                },\n              ]}\n              colorScale={['#23c9ff', '#f7b267', '#a93f55']}\n              style={{\n                labels: { fill: '#e4e3d3', fontSize: 10 },\n                title: { fill: '#e4e3d3', fontSize: 10 },\n              }}\n            />\n            <VictoryAxis\n              style={{\n                axis: { stroke: '#e4e3d3' },\n                grid: { stroke: 'rgba(188, 187, 174, 0.3)' },\n              }}\n              tickFormat={t => `${t} ${formatMessage({ id: 'labels.pcs' })}`}\n              dependentAxis={true}\n              tickLabelComponent={\n                <VictoryPortal>\n                  <VictoryLabel style={{ fontSize: '12px', fill: '#e4e3d3' }} />\n                </VictoryPortal>\n              }\n            />\n            <VictoryAxis\n              tickValues={labelsX}\n              style={{ axis: { stroke: '#e4e3d3' } }}\n              tickLabelComponent={\n                <VictoryPortal>\n                  <VictoryLabel\n                    style={{\n                      textAnchor: 'end',\n                      fontSize: '12px',\n                      fill: '#e4e3d3',\n                    }}\n                    angle={-75}\n                  />\n                </VictoryPortal>\n              }\n            />\n            <VictoryStack\n              colorScale={[\n                '#23c9ff',\n                '#a93f55',\n                '#f7b267',\n                '#6B2D5C',\n                '#D7A7B1',\n              ]}\n              style={{ data: { width: 15 } }}\n            >\n              <VictoryBar\n                name=\"bar-confirmed\"\n                maxDomain={{ y: maxConfirmedY + 20 }}\n                data={data.confirmed}\n                animate={{\n                  duration: 2000,\n                }}\n                style={{\n                  labels: {\n                    fill: '#e4e3d3',\n                  },\n                }}\n              />\n              <VictoryBar\n                name=\"bar-deaths\"\n                maxDomain={{ y: maxConfirmedY + 20 }}\n                data={data.deaths}\n                style={{\n                  labels: {\n                    fill: '#e4e3d3',\n                  },\n                }}\n                animate={{\n                  duration: 2000,\n                }}\n              />\n              <VictoryBar\n                name=\"bar-recovered\"\n                maxDomain={{ y: maxConfirmedY + 20 }}\n                data={data.recovered}\n                style={{\n                  labels: {\n                    fill: '#e4e3d3',\n                  },\n                }}\n                animate={{\n                  duration: 2000,\n                }}\n              />\n            </VictoryStack>\n          </VictoryChart>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default GroupChart;\n","import React, { useState, useEffect, FunctionComponent } from 'react';\nimport BarChart from './BarChart';\nimport LineChart from './LineChart';\nimport {\n  formatDataToXAndY,\n  formatDatesToXAndY,\n  formatTotalInfections,\n} from '../../utils/dataUtils';\nimport { useIntl } from 'react-intl';\nimport GroupChart from './GroupChart';\nimport { Data, XAndY, DataInXAndY } from '../../interfaces';\n\ninterface ChartsProps {\n  data: Data;\n}\n\nconst Charts: FunctionComponent<ChartsProps> = ({ data }) => {\n  const { formatMessage } = useIntl();\n\n  const [infectionSources, setiInfectionSources] = useState<XAndY[]>([]);\n  const [infectionsPerDay, setInfectionsPerDay] = useState<DataInXAndY>({\n    confirmed: [],\n    deaths: [],\n    recovered: [],\n  });\n  const [totalInfectionsPerDay, setTotalInfectionsPerDay] = useState<XAndY[]>(\n    []\n  );\n\n  useEffect(() => {\n    if (data) {\n      const formattedDistricts = formatDataToXAndY(\n        data.confirmed,\n        'healthCareDistrict'\n      );\n      setiInfectionSources(formattedDistricts);\n      const formattedInfectionsPerDay = {\n        confirmed: formatDatesToXAndY(data.confirmed, data.confirmed[0].date),\n        deaths: formatDatesToXAndY(data.deaths, data.confirmed[0].date),\n        recovered: formatDatesToXAndY(data.recovered, data.confirmed[0].date),\n      };\n      setInfectionsPerDay(formattedInfectionsPerDay);\n      const formattedTotalInfectionsPerDay = formatTotalInfections(\n        data.confirmed\n      );\n      setTotalInfectionsPerDay(formattedTotalInfectionsPerDay);\n    }\n  }, [data]);\n\n  const renderCharts = () => {\n    return (\n      <>\n        <LineChart\n          data={totalInfectionsPerDay}\n          title={formatMessage({ id: 'charts.totalInfectionsPerDay' })}\n        />\n        <GroupChart\n          data={infectionsPerDay}\n          title={formatMessage({ id: 'charts.infectionsPerDay' })}\n        />\n        <BarChart\n          data={infectionSources}\n          title={formatMessage({ id: 'charts.confirmedPerDistrict' })}\n        />\n      </>\n    );\n  };\n  return <>{data ? renderCharts() : <div>loading</div>}</>;\n};\n\nexport default Charts;\n","import React, { FunctionComponent } from 'react';\nimport styled from 'styled-components';\n\ninterface NumberBoxProps {\n  number: string | number;\n  label: string;\n}\n\nconst Wrapper = styled.div`\n  min-width: 10rem;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  background-color: #222139;\n  padding: 0.5rem;\n`;\n\nconst Number = styled.div`\n  font-size: 3rem;\n`;\n\nconst NumberBox: FunctionComponent<NumberBoxProps> = ({ number, label }) => (\n  <Wrapper>\n    <Number>{number}</Number>\n    <p>{label}</p>\n  </Wrapper>\n);\n\nexport default NumberBox;\n","import React, { FunctionComponent } from 'react';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport styled from 'styled-components';\n\nimport NumberBox from './NumberBox';\n\ninterface NumbersObject {\n  all: number;\n  today: number;\n}\n\ninterface NumbersProps {\n  confirmed: NumbersObject;\n  deaths: NumbersObject;\n  recovered: NumbersObject;\n}\n\nconst Rows = styled.div`\n  width: 100%;\n  padding-bottom: 2rem;\n  @media only screen and (min-width: 768px) {\n    width: 30rem;\n  }\n`;\n\nconst Row = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n  grid-gap: 1rem;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n  &:not(:last-child) {\n    margin-bottom: 0.5rem;\n  }\n`;\n\nconst Numbers: FunctionComponent<NumbersProps> = ({\n  confirmed,\n  deaths,\n  recovered,\n}) => {\n  const { formatMessage } = useIntl();\n  return (\n    <Rows>\n      <h2>\n        <FormattedMessage id=\"site.titles.confirmed\" />\n      </h2>\n      <Row>\n        <NumberBox\n          number={confirmed.all}\n          label={formatMessage({ id: 'numbers.confirmed' })}\n        />\n        <NumberBox\n          number={confirmed.today}\n          label={formatMessage({ id: 'numbers.today' })}\n        />\n      </Row>\n      <h2>\n        <FormattedMessage id=\"site.titles.deaths\" />\n      </h2>\n      <Row>\n        <NumberBox\n          number={deaths.all}\n          label={formatMessage({ id: 'numbers.deaths' })}\n        />\n        <NumberBox\n          number={deaths.today}\n          label={formatMessage({ id: 'numbers.today' })}\n        />\n      </Row>\n      <h2>\n        <FormattedMessage id=\"site.titles.recovered\" />\n      </h2>\n      <Row>\n        <NumberBox\n          number={recovered.all}\n          label={formatMessage({ id: 'numbers.recovered' })}\n        />\n        <NumberBox\n          number={recovered.today}\n          label={formatMessage({ id: 'numbers.today' })}\n        />\n      </Row>\n    </Rows>\n  );\n};\n\nexport default Numbers;\n","import gql from 'graphql-tag';\n\nexport const GET_DATA = gql`\n  query confirmed {\n    data @rest(type: \"Data\", path: \"/\") {\n      confirmed @type(name: \"Confirmed\") {\n        id\n        date\n        healthCareDistrict\n        infectionSourceCountry\n        infectionSource\n      }\n      deaths @type(name: \"Deaths\") {\n        id\n        date\n      }\n      recovered @type(name: \"Recovered\") {\n        id\n        date\n      }\n    }\n  }\n`;\n","import React, { FunctionComponent } from 'react';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport Footer from './Footer';\nimport Charts from './Charts/Charts';\nimport styled from 'styled-components';\nimport Numbers from './Numbers';\nimport { useQuery } from '@apollo/react-hooks';\nimport { GET_DATA } from '../graphql/queries';\nimport isToday from 'date-fns/isToday';\nimport { Confirmed, Death, Recovered } from '../interfaces';\n\ninterface RootProps {\n  changeLocale: () => void;\n}\n\nconst Header = styled.header`\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-end;\n  width: 100%;\n  @media only screen and (min-width: 1000px) {\n    width: 50rem;\n  }\n`;\n\nconst Main = styled.main`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  align-items: center;\n  margin: 2rem 1rem 2rem 1rem;\n  width: 80%;\n  @media only screen and (min-width: 1000px) {\n    width: 50rem;\n  }\n`;\n\nconst ButtonGroup = styled.div`\n  margin: 0 1rem 0 1rem;\n`;\n\ninterface GroupButtonProps {\n  active: boolean;\n}\n\nconst GroupButton = styled.button<GroupButtonProps>`\n  background-color: ${(props) => (props.active ? '#e4e3d3' : '#2e2d4d')};\n  border: 0.125rem solid #e4e3d3;\n  color: ${(props) => (props.active ? '#2e2d4d' : '#e4e3d3')};\n  padding: 1rem;\n  width: 4rem;\n  &:first-child {\n    border-radius: 0.5rem 0 0 0.5rem;\n    border-right: none;\n  }\n\n  &:last-child {\n    border-radius: 0 0.5rem 0.5rem 0;\n    border-left: none;\n  }\n`;\n\nconst NotificationBox = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  line-height: 1.5rem;\n  align-items: center;\n  background-color: #222139;\n  padding: 2rem;\n  width: 80%;\n  margin: 2rem 1rem 2rem 1rem;\n  @media only screen and (min-width: 768px) {\n    width: 26rem;\n  }\n`;\n\nconst Root: FunctionComponent<RootProps> = ({ changeLocale }) => {\n  const { locale } = useIntl();\n  const { data } = useQuery(GET_DATA);\n  const handleLocaleChange = () => {\n    changeLocale();\n  };\n\n  return (\n    <>\n      <Header>\n        <ButtonGroup>\n          <GroupButton onClick={handleLocaleChange} active={locale === 'fi'}>\n            FI\n          </GroupButton>\n          <GroupButton onClick={handleLocaleChange} active={locale === 'en'}>\n            EN\n          </GroupButton>\n        </ButtonGroup>\n      </Header>\n      <Main>\n        <h1>\n          <FormattedMessage id=\"site.title\" />\n        </h1>\n        <NotificationBox>\n          <p>\n            <FormattedMessage id=\"site.notification\" />\n          </p>\n        </NotificationBox>\n        {data && (\n          <>\n            <Numbers\n              confirmed={{\n                all: data.data.confirmed.length,\n                today: data.data.confirmed.filter((item: Confirmed) =>\n                  isToday(new Date(item.date))\n                ).length,\n              }}\n              deaths={{\n                all: data.data.deaths.length,\n                today: data.data.deaths.filter((item: Death) =>\n                  isToday(new Date(item.date))\n                ).length,\n              }}\n              recovered={{\n                all: data.data.recovered.length,\n                today: data.data.recovered.filter((item: Recovered) =>\n                  isToday(new Date(item.date))\n                ).length,\n              }}\n            />\n            <Charts data={data.data} />\n          </>\n        )}\n      </Main>\n      <Footer />\n    </>\n  );\n};\n\nexport default Root;\n","import { ApolloClient } from 'apollo-client';\nimport { InMemoryCache } from 'apollo-cache-inmemory';\nimport { RestLink } from 'apollo-link-rest';\n\nconst cache = new InMemoryCache();\n\nconst restLink = new RestLink({\n  uri:\n    'https://w3qa5ydb4l.execute-api.eu-west-1.amazonaws.com/prod/finnishCoronaData/v2',\n});\n\nconst client = new ApolloClient({\n  link: restLink,\n  cache,\n});\n\nexport default client;\n","import React, { useState } from 'react';\nimport { ApolloProvider } from '@apollo/react-hooks';\nimport { IntlProvider } from 'react-intl';\nimport Root from './components/Root';\nimport en from './translations/en.json';\nimport fi from './translations/fi.json';\nimport client from './graphql/apolloSetup';\n\nconst translations = {\n  en,\n  fi,\n};\n\ntype LocaleType = 'en' | 'fi';\n\nconst App = () => {\n  const localeFromLocalStorage = localStorage.getItem('locale');\n  const localeToSet =\n    localeFromLocalStorage === 'en' || localeFromLocalStorage === 'fi'\n      ? localeFromLocalStorage\n      : 'fi';\n  const [locale, setLocale] = useState<LocaleType>(localeToSet);\n  const hanldeLocaleChange = () => {\n    localStorage.setItem('locale', locale === 'en' ? 'fi' : 'en');\n    setLocale(locale === 'en' ? 'fi' : 'en');\n    document.documentElement.lang = locale === 'en' ? 'fi' : 'en';\n  };\n\n  return (\n    <IntlProvider locale={locale} messages={translations[locale]}>\n      <ApolloProvider client={client}>\n        <Root changeLocale={hanldeLocaleChange} />\n      </ApolloProvider>\n    </IntlProvider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}